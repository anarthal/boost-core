# Generated by `boostdep --cmake core`
# Copyright 2020, 2021 Peter Dimov
# Distributed under the Boost Software License, Version 1.0.
# https://www.boost.org/LICENSE_1_0.txt

cmake_minimum_required(VERSION 3.5...3.31)

project(boost_core VERSION "${BOOST_SUPERPROJECT_VERSION}" LANGUAGES CXX)

if (BOOST_USE_MODULES)
  add_library(boost_core STATIC)
  target_sources(boost_core PUBLIC FILE_SET CXX_MODULES BASE_DIRS modules FILES modules/boost_core.cppm)
  set(__scope PUBLIC)

  # Enable and propagate C++23, import std, and the modules macro
  target_compile_features(boost_core PUBLIC cxx_std_23)
  set_target_properties(boost_core PROPERTIES CXX_MODULE_STD 1)
  target_compile_definitions(boost_core PUBLIC BOOST_USE_MODULES)

  # Silence warnings about includes in the purview
  if (CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
    target_compile_options(boost_core PRIVATE -Wno-include-angled-in-module-purview)
  elseif (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
    target_compile_options(boost_core PRIVATE /wd5244)
  endif()
else()
  add_library(boost_core INTERFACE)
  set(__scope INTERFACE)
endif()

add_library(Boost::core ALIAS boost_core)
target_include_directories(boost_core ${__scope} include)
target_link_libraries(boost_core
  ${__scope}
    Boost::assert
    Boost::config
    Boost::static_assert
    Boost::throw_exception
)

if(CMAKE_VERSION VERSION_GREATER 3.18 AND CMAKE_GENERATOR MATCHES "Visual Studio")

  file(GLOB_RECURSE boost_core_IDEFILES CONFIGURE_DEPENDS include/*.hpp)
  source_group(TREE ${PROJECT_SOURCE_DIR}/include FILES ${boost_core_IDEFILES} PREFIX "Header Files")
  list(APPEND boost_core_IDEFILES extra/boost_core.natvis)
  target_sources(boost_core PRIVATE ${boost_core_IDEFILES})

endif()

if(BUILD_TESTING AND EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/test/CMakeLists.txt")

  add_subdirectory(test)

endif()
